{"version":3,"file":"applets-request-mode-list.min.js","sources":["../node_modules/applets-request-weapp/src/helpers/utils.ts","../node_modules/applets-request-weapp/src/adapter/request.ts","../node_modules/applets-request-weapp/src/adapter/config.ts","../src/helpers/utils.ts","../node_modules/applets-request-weapp/src/appletsRequestWeapp.ts","../src/ApiHttp.ts"],"sourcesContent":["function getDataType(val: any): string {\n  return Object.prototype.toString.call(val);\n}\n\nexport function isPlainObject(val: any): val is Record<string, any> {\n  if (val === null || getDataType(val) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\nexport function assign<T, U>(to: T, from: U): T & U {\n  if (isString(from)) {\n    return to as T & U;\n  }\n\n  for (const key in from) {\n    (to as T & U)[key] = from[key] as any;\n  }\n\n  return to as T & U;\n}\n\nexport function isUndefined(val: any): boolean {\n  return typeof val === \"undefined\";\n}\n\nexport function merge(\n  ...objs: Record<string, any>[]\n): any[] | Record<string, any> {\n  if (objs.length === 0) {\n    return Object.create(null);\n  }\n\n  let result: any = Object.create(null);\n  function assignValue(val: any, key: string | number): void {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (Array.isArray(val)) {\n      result[key] = merge(val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  if (Array.isArray(objs[0])) {\n    result = [];\n  } else {\n    result = Object.create(null);\n  }\n\n  objs.forEach((obj) => {\n    forEach(obj, assignValue);\n  });\n\n  return result;\n}\n\nexport function isString(val: any): boolean {\n  return typeof val === \"string\";\n}\n\n/**\n * 遍历\n * @param {Object|Array} obj\n * @param fn\n */\nexport function forEach(obj: any, fn: IAppletsRequest.IEmptyFN): void {\n  if (typeof obj === \"undefined\" || obj === null) {\n    return;\n  }\n\n  let arr = obj;\n\n  // 如果obj是非object类型，例如：number，string等\n  if (typeof obj !== \"object\") {\n    arr = [obj];\n  }\n\n  if (Array.isArray(arr)) {\n    arr.forEach((item, i) => {\n      fn.call(null, item, i, obj);\n    });\n    return;\n  }\n  Object.keys(arr).forEach((key) => {\n    fn.call(null, arr[key], key, arr);\n  });\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-04 16:09:10\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-22 17:16:17\n * @Description request adapter\n *\n * 1. 执行成功需要返回IAppletsRequestResponse，执行失败即为reject返回IAppletsRequestAdapterError\n * 2. 如果取消返回IAppletsRequest.ICanceler\n */\n\nimport { isUndefined, merge } from \"../helpers/utils\";\nimport getRequestOptions from \"./config\";\n\ninterface IResolveOptions {\n  headers: Record<string, any>;\n  status: number;\n  data: any;\n  response?: any;\n}\n\nexport default function request(\n  config: IAppletsRequest.IHttpConfig\n): IAppletsRequestPromise {\n  function requestSuccess(res: any): IResolveOptions {\n    if (isUndefined(res) || res === null) {\n      return {\n        headers: {},\n        status: 200,\n        data: {},\n        response: res,\n      };\n    }\n\n    return {\n      headers: res.header,\n      status: res.statusCode,\n      data: dataParser(res.data),\n      response: res,\n    };\n  }\n\n  /**\n   * 获取错误类型\n   * @param err\n   * @param timeout\n   * @returns NETWORK_ERROR | TIMEOUT\n   * @example {\n   *    msg: `Timeout of 2000 ms exceeded`,\n   *    type: \"TIMEOUT\",\n   *  }\n   */\n  function failType(\n    err: any,\n    timeout: number | undefined\n  ): { msg: string; type: \"NETWORK_ERROR\" | \"TIMEOUT\" } {\n    if (\n      err &&\n      (err.errMsg || \"\").toString().toLowerCase().includes(\"timeout\")\n    ) {\n      return {\n        msg: `Timeout of ${timeout || \"\"} ms exceeded`,\n        type: \"TIMEOUT\",\n      };\n    }\n    return {\n      msg: `Network Error`,\n      type: \"NETWORK_ERROR\",\n    };\n  }\n\n  /**\n   * JSON parse data\n   * @param data\n   */\n  function dataParser(data: any): any {\n    if (typeof data !== \"string\") {\n      return data;\n    }\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return data;\n    }\n  }\n\n  function getReqConfig(\n    originalConfig: IAppletsRequest.IHttpConfig\n  ): IAppletsRequest.IHttpConfig {\n    const tmpConfig: any = merge({}, originalConfig);\n    tmpConfig.headers = originalConfig.header;\n    delete tmpConfig.header;\n    delete tmpConfig.Adapter;\n    return tmpConfig;\n  }\n\n  return new Promise((resolve, reject) => {\n    const Adapter = config.Adapter;\n    const reqConfig = getRequestOptions(config);\n    const adapterConfig = getReqConfig(config);\n\n    if (!Adapter) {\n      throw new TypeError(\"Adapter is undefined or null\");\n    }\n\n    const adapter = new Adapter(adapterConfig);\n\n    let requestor = wx.request({\n      ...reqConfig,\n      success(res: any) {\n        adapter.resolve(requestSuccess(res), resolve);\n      },\n      fail(err: any) {\n        const errData = failType(err, reqConfig.timeout);\n        const rejectData = {\n          errMsg: errData.msg,\n          status: errData.type,\n          extra: err,\n        };\n\n        adapter.reject(rejectData, reject);\n      },\n      complete() {\n        requestor = null;\n      },\n    });\n\n    adapter.subscribeCancelEvent((reason) => {\n      reject(reason);\n      requestor.abort();\n      requestor = null;\n    });\n\n    if (typeof config.getRequestTask === \"function\") {\n      config.getRequestTask(request);\n    }\n  });\n}\n","export default function getRequestOptions(\n  config: IAppletsRequest.IHttpConfig\n): IAppletsRequestWx.RequestOption {\n  const reqConfig: IAppletsRequestWx.RequestOption = {\n    url: config.url || \"\",\n    method: config.method,\n    data: config.data,\n    header: config.headers,\n    dataType: \"json\",\n    timeout: config.timeout,\n  } as IAppletsRequestWx.RequestOption;\n\n  const dataType = config.dataType || \"json\";\n  reqConfig.dataType = dataType;\n\n  if (config.responseType && config.responseType !== \"json\") {\n    reqConfig.dataType = \"其他\";\n  }\n\n  return reqConfig;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\nfunction getDataType(val: any): string {\n  return Object.prototype.toString.call(val);\n}\n\nexport function isArray(data: any): boolean {\n  return Array.isArray(data);\n}\n\nexport function isPlainObject(val: any): val is Record<string, any> {\n  if (val === null || getDataType(val) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\nexport function assign<T, U>(to: T, from: U): T & U {\n  if (isString(from)) {\n    return to as T & U;\n  }\n\n  for (const key in from) {\n    (to as T & U)[key] = from[key] as any;\n  }\n\n  return to as T & U;\n}\n\nexport function isString(val: any): boolean {\n  return typeof val === \"string\";\n}\n\n/**\n * 遍历\n * @param {Object|Array} obj\n * @param fn\n */\nexport function forEach(obj: any, fn: IAppletsRequest.IEmptyFN): void {\n  if (typeof obj === \"undefined\" || obj === null) {\n    return;\n  }\n\n  let arr = obj;\n\n  // 如果obj是非object类型，例如：number，string等\n  if (typeof obj !== \"object\") {\n    arr = [obj];\n  }\n\n  if (Array.isArray(arr)) {\n    arr.forEach((item, i) => {\n      fn.call(null, item, i, obj);\n    });\n    return;\n  }\n  Object.keys(arr).forEach((key) => {\n    fn.call(null, arr[key], key, arr);\n  });\n}\n\nexport function merge(\n  ...objs: Record<string, any>[]\n): any[] | Record<string, any> {\n  if (objs.length === 0) {\n    return Object.create(null);\n  }\n\n  let result: any = Object.create(null);\n  function assignValue(val: any, key: string | number): void {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (Array.isArray(val)) {\n      result[key] = merge(val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  if (Array.isArray(objs[0])) {\n    result = [];\n  } else {\n    result = Object.create(null);\n  }\n\n  objs.forEach((obj) => {\n    forEach(obj, assignValue);\n  });\n\n  return result;\n}\n","import appletsRequest, {\n  AppletsRequest,\n  createAppletsRequestInstance,\n  getDefaults as getAppletsRequestDefaults,\n} from \"applets-request\";\nimport weappAdapter from \"./adapter/request\";\n\nappletsRequest.defaults.adapter = weappAdapter;\n\nexport default appletsRequest;\n\nexport { AppletsRequest as AppletsRequest };\n\nexport { createAppletsRequestInstance as createAppletsRequestInstance };\n\nexport function getDefaults(): IAppletsRequestConfig {\n  const defaults = getAppletsRequestDefaults();\n  defaults.adapter = weappAdapter;\n\n  return defaults;\n}\n","import appletsRequest, { getDefaults } from \"applets-request-weapp\";\nimport { assign, isArray, isPlainObject, merge } from \"./helpers/utils\";\n\ninterface IApiItemConfig {\n  baseURL: string;\n  url: string;\n  fnName: string;\n  retryTimes?: number;\n  interval?: number;\n}\n\nclass ApiItem<IData = any> {\n  private hadRetry = 0;\n\n  retryTimes = 2;\n\n  interval = 2000;\n\n  baseURL = \"\";\n\n  url = \"\";\n\n  fnName = \"\";\n\n  appletsRequest: AppletsRequestInstance;\n\n  constructor(config: IApiItemConfig, request: AppletsRequestInstance) {\n    const { retryTimes, interval } = config;\n    this.baseURL = config.baseURL;\n    this.url = config.url;\n    this.fnName = config.fnName;\n    this.retryTimes = this.getValidNumber(this.retryTimes, retryTimes);\n    this.interval = this.getValidNumber(this.interval, interval);\n    this.appletsRequest = request;\n  }\n\n  getValidNumber(originalVal: number, val: number | undefined): number {\n    return !val && val !== 0 ? originalVal : val;\n  }\n\n  http(options?: IAppletsRequestConfig): IAppletsRequestPromise<IData> {\n    return new Promise((resolve, reject) => {\n      this.request(options || {}, resolve, reject);\n    });\n  }\n\n  request(\n    options: IAppletsRequestConfig,\n    resolve: any,\n    reject: IAppletsRequest.IRejected\n  ): void {\n    Promise.resolve(options)\n      .then((reqConfig) => this.appletsRequest<IData>(reqConfig))\n      .then((res) => {\n        this.hadRetry = 0;\n        resolve(res);\n      })\n      .catch((err) => {\n        if (this.isRetryError(err) && this.hadRetry < this.retryTimes) {\n          this.hadRetry += 1;\n          const opts = merge(options, err.options || {});\n          this.request(opts, resolve, reject);\n          return;\n        }\n        if (this.isIntervalRetryError(err) && this.hadRetry < this.retryTimes) {\n          setTimeout(() => {\n            this.hadRetry += 1;\n            this.request(options, resolve, reject);\n          }, this.interval);\n          return;\n        }\n        reject(this.isRetryError(err) ? err.originalErr : err);\n      });\n  }\n\n  isRetryError(err: any): boolean {\n    if (!err) {\n      return false;\n    }\n    return err.errCode === \"RETRY_ERROR\";\n  }\n\n  isIntervalRetryError(err: any): boolean {\n    if (!err) {\n      return false;\n    }\n    return err.status === \"NETWORK_ERROR\" || err.status === \"TIMEOUT\";\n  }\n}\n\ninterface IApiHttpConfig {\n  appKey: string;\n\n  appCode: string;\n\n  baseURL: string;\n\n  apiList: { [key: string]: IApiItem } | IApiItem[];\n}\n\nexport default class ApiHttp {\n  appKey: string;\n\n  appCode: string;\n\n  baseURL: string;\n\n  apiList: { [key: string]: IApiItem };\n\n  apis: any;\n\n  appletsRequest: AppletsRequestInstance;\n\n  constructor(config: IApiHttpConfig, requestConfig?: IAppletsRequestConfig) {\n    this.apiList = {};\n    this.apis = Object.create(null);\n    this.appKey = config.appKey;\n    this.appCode = config.appCode;\n    this.baseURL = config.baseURL;\n    this.appletsRequest = appletsRequest.create(requestConfig || getDefaults());\n    this.createApiItem(config.apiList);\n  }\n\n  createApiItem(apiList: { [key: string]: IApiItem } | IApiItem[]): void {\n    if (isArray(apiList)) {\n      const tmpApiList: { [key: string]: IApiItem } = Object.create(null);\n      (apiList as IApiItem[]).forEach((item) => {\n        if (item.fnName) {\n          tmpApiList[item.fnName] = item;\n        }\n      });\n      const fnNames = (apiList as IApiItem[]).map((item) => item.fnName);\n\n      this.apiList = tmpApiList;\n      this.generateApiFn(fnNames as string[]);\n      return;\n    }\n\n    if (isPlainObject(this.apiList)) {\n      const fnNames = Object.keys(this.apiList);\n\n      this.generateApiFn(fnNames);\n    }\n  }\n\n  generateApiFn(fnNames: string[]): void {\n    fnNames.forEach((fnName) => {\n      const apiConfig = this.apiList[fnName] as IApiItem;\n      const apiItem = new ApiItem(\n        {\n          baseURL: this.baseURL,\n          fnName,\n          url: apiConfig.apiUrl,\n          interval: apiConfig.interval,\n          retryTimes: apiConfig.retryTimes,\n        },\n        this.appletsRequest\n      );\n      this.apis[fnName] = apiItem.http.bind(apiItem);\n      this.apis[fnName] = assign(this.apis[fnName], apiItem);\n    });\n  }\n\n  createRetryError(\n    originalErr: any,\n    options?: IAppletsRequestConfig\n  ): {\n    errCode: string;\n    originalErr: any;\n    options: IAppletsRequestConfig | undefined;\n  } {\n    return {\n      errCode: \"RETRY_ERROR\",\n      originalErr,\n      options,\n    };\n  }\n\n  addRequestInterceptor(\n    fulfilled: IAppletsRequest.IResolved<IAppletsRequestConfig>,\n    rejected?: IAppletsRequest.IRejected\n  ): void {\n    this.appletsRequest.interceptors.request.use(fulfilled, rejected);\n  }\n\n  addResponseInterceptor<T>(\n    fulfilled: IAppletsRequest.IResolved<IAppletsRequestResponse<T>>,\n    rejected?: IAppletsRequest.IRejected\n  ): void {\n    this.appletsRequest.interceptors.response.use(fulfilled, rejected);\n  }\n\n  createCancelToken(): IAppletsRequest.ICancelTokenInstance {\n    return new this.appletsRequest.CancelToken();\n  }\n\n  transformConfig(executor: IAppletsRequest.IConfigTransformer): void {\n    this.appletsRequest.defaults.transformConfig = executor;\n  }\n}\n"],"names":["isPlainObject","val","Object","prototype","toString","call","getDataType","getPrototypeOf","merge","_i","objs","length","create","result","assignValue","key","Array","isArray","forEach","obj","fn","arr","item","i","keys","request","config","dataParser","data","JSON","parse","e","getReqConfig","originalConfig","tmpConfig","headers","header","Adapter","Promise","resolve","reject","reqConfig","url","method","dataType","timeout","responseType","getRequestOptions","adapterConfig","TypeError","adapter","requestor","wx","success","res","isUndefined","status","response","statusCode","requestSuccess","fail","err","errData","errMsg","toLowerCase","includes","msg","type","failType","rejectData","extra","complete","subscribeCancelEvent","reason","abort","getRequestTask","appletsRequest","defaults","weappAdapter","this","retryTimes","interval","baseURL","fnName","getValidNumber","ApiItem","originalVal","options","_this","then","hadRetry","catch","isRetryError","opts","isIntervalRetryError","setTimeout","originalErr","errCode","requestConfig","apiList","apis","appKey","appCode","getAppletsRequestDefaults","createApiItem","ApiHttp","tmpApiList_1","fnNames","map","generateApiFn","apiConfig","apiItem","apiUrl","http","bind","to","from","assign","fulfilled","rejected","interceptors","use","CancelToken","executor","transformConfig"],"mappings":";;;;;;;;;;;;;;yFAIgBA,EAAcC,GAC5B,GAAY,OAARA,GAAqC,oBAL3C,SAAqBA,GACnB,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,GAIlBK,CAAYL,GAC9B,OAAO,EAET,IAAME,EAAYD,OAAOK,eAAeN,GACxC,OAAqB,OAAdE,GAAsBA,IAAcD,OAAOC,mBAmBpCK,QACd,aAAAC,mBAAAA,IAAAC,kBAEA,GAAoB,IAAhBA,EAAKC,OACP,OAAOT,OAAOU,OAAO,MAGvB,IAAIC,EAAcX,OAAOU,OAAO,MAChC,SAASE,EAAYb,EAAUc,GACzBf,EAAca,EAAOE,KAASf,EAAcC,GAC9CY,EAAOE,GAAOP,EAAMK,EAAOE,GAAMd,GACxBD,EAAcC,GACvBY,EAAOE,GAAOP,EAAM,GAAIP,GACfe,MAAMC,QAAQhB,GACvBY,EAAOE,GAAOP,EAAMP,GAEpBY,EAAOE,GAAOd,EAclB,OATEY,EADEG,MAAMC,QAAQP,EAAK,IACZ,GAEAR,OAAOU,OAAO,MAGzBF,EAAKQ,SAAQ,SAACC,GACZD,EAAQC,EAAKL,MAGRD,WAYOK,EAAQC,EAAUC,GAChC,GAAI,MAAOD,EAAX,CAIA,IAAIE,EAAMF,EAGS,iBAARA,IACTE,EAAM,CAACF,IAGLH,MAAMC,QAAQI,GAChBA,EAAIH,SAAQ,SAACI,EAAMC,GACjBH,EAAGf,KAAK,KAAMiB,EAAMC,EAAGJ,MAI3BjB,OAAOsB,KAAKH,GAAKH,SAAQ,SAACH,GACxBK,EAAGf,KAAK,KAAMgB,EAAIN,GAAMA,EAAKM,gBCpETI,EACtBC,GAqDA,SAASC,EAAWC,GAClB,GAAoB,iBAATA,EACT,OAAOA,EAET,IACE,OAAOC,KAAKC,MAAMF,GAClB,MAAOG,GACP,OAAOH,GAIX,SAASI,EACPC,GAEA,IAAMC,EAAiB1B,EAAM,GAAIyB,GAIjC,OAHAC,EAAUC,QAAUF,EAAeG,cAC5BF,EAAUE,cACVF,EAAUG,QACVH,EAGT,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMH,EAAUX,EAAOW,QACjBI,WCjGRf,GAEA,IAAMe,EAA6C,CACjDC,IAAKhB,EAAOgB,KAAO,GACnBC,OAAQjB,EAAOiB,OACff,KAAMF,EAAOE,KACbQ,OAAQV,EAAOS,QACfS,SAAU,OACVC,QAASnB,EAAOmB,SAGZD,EAAWlB,EAAOkB,UAAY,OAOpC,OANAH,EAAUG,SAAWA,EAEjBlB,EAAOoB,cAAwC,SAAxBpB,EAAOoB,eAChCL,EAAUG,SAAW,MAGhBH,ED+EaM,CAAkBrB,GAC9BsB,EAAgBhB,EAAaN,GAEnC,IAAKW,EACH,MAAM,IAAIY,UAAU,gCAGtB,IAAMC,EAAU,IAAIb,EAAQW,GAExBG,EAAYC,GAAG3B,eACdgB,IACHY,QAAA,SAAQC,GACNJ,EAAQX,QAtFd,SAAwBe,GACtB,OAAIC,MAAYD,EACP,CACLnB,QAAS,GACTqB,OAAQ,IACR5B,KAAM,GACN6B,SAAUH,GAIP,CACLnB,QAASmB,EAAIlB,OACboB,OAAQF,EAAII,WACZ9B,KAAMD,EAAW2B,EAAI1B,MACrB6B,SAAUH,GAwEQK,CAAeL,GAAMf,IAEvCqB,KAAA,SAAKC,GACH,IAAMC,EA7DZ,SACED,EACAhB,GAEA,OACEgB,IACCA,EAAIE,QAAU,IAAI3D,WAAW4D,cAAcC,SAAS,WAE9C,CACLC,IAAK,eAAcrB,GAAW,mBAC9BsB,KAAM,WAGH,CACLD,IAAK,gBACLC,KAAM,iBA8CYC,CAASP,EAAKpB,EAAUI,SAClCwB,EAAa,CACjBN,OAAQD,EAAQI,IAChBV,OAAQM,EAAQK,KAChBG,MAAOT,GAGTX,EAAQV,OAAO6B,EAAY7B,IAE7B+B,oBACEpB,EAAY,SAIhBD,EAAQsB,sBAAqB,SAACC,GAC5BjC,EAAOiC,GACPtB,EAAUuB,QACVvB,EAAY,QAGuB,mBAA1BzB,EAAOiD,gBAChBjD,EAAOiD,eAAelD,eE5HZzB,EAAcC,GAC5B,GAAY,OAARA,GAAqC,oBAT3C,SAAqBA,GACnB,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,GAQlBK,CAAYL,GAC9B,OAAO,EAET,IAAME,EAAYD,OAAOK,eAAeN,GACxC,OAAqB,OAAdE,GAAsBA,IAAcD,OAAOC,mBAwBpCe,EAAQC,EAAUC,GAChC,GAAI,MAAOD,EAAX,CAIA,IAAIE,EAAMF,EAGS,iBAARA,IACTE,EAAM,CAACF,IAGLH,MAAMC,QAAQI,GAChBA,EAAIH,SAAQ,SAACI,EAAMC,GACjBH,EAAGf,KAAK,KAAMiB,EAAMC,EAAGJ,MAI3BjB,OAAOsB,KAAKH,GAAKH,SAAQ,SAACH,GACxBK,EAAGf,KAAK,KAAMgB,EAAIN,GAAMA,EAAKM,gBAIjBb,QACd,aAAAC,mBAAAA,IAAAC,kBAEA,GAAoB,IAAhBA,EAAKC,OACP,OAAOT,OAAOU,OAAO,MAGvB,IAAIC,EAAcX,OAAOU,OAAO,MAChC,SAASE,EAAYb,EAAUc,GACzBf,EAAca,EAAOE,KAASf,EAAcC,GAC9CY,EAAOE,GAAOP,EAAMK,EAAOE,GAAMd,GACxBD,EAAcC,GACvBY,EAAOE,GAAOP,EAAM,GAAIP,GACfe,MAAMC,QAAQhB,GACvBY,EAAOE,GAAOP,EAAMP,GAEpBY,EAAOE,GAAOd,EAclB,OATEY,EADEG,MAAMC,QAAQP,EAAK,IACZ,GAEAR,OAAOU,OAAO,MAGzBF,EAAKQ,SAAQ,SAACC,GACZD,EAAQC,EAAKL,MAGRD,ECrFT+D,UAAeC,SAAS3B,QAAU4B,ECIlC,iBAeE,WAAYpD,EAAwBD,GAd5BsD,cAAW,EAEnBA,gBAAa,EAEbA,cAAW,IAEXA,aAAU,GAEVA,SAAM,GAENA,YAAS,GAKC,IAAAC,EAAyBtD,aAAbuD,EAAavD,WACjCqD,KAAKG,QAAUxD,EAAOwD,QACtBH,KAAKrC,IAAMhB,EAAOgB,IAClBqC,KAAKI,OAASzD,EAAOyD,OACrBJ,KAAKC,WAAaD,KAAKK,eAAeL,KAAKC,WAAYA,GACvDD,KAAKE,SAAWF,KAAKK,eAAeL,KAAKE,SAAUA,GACnDF,KAAKH,eAAiBnD,EAuD1B,OApDE4D,2BAAA,SAAeC,EAAqBrF,GAClC,OAAQA,GAAe,IAARA,EAA0BA,EAAdqF,GAG7BD,iBAAA,SAAKE,GAAL,WACE,OAAO,IAAIjD,SAAQ,SAACC,EAASC,GAC3BgD,EAAK/D,QAAQ8D,GAAW,GAAIhD,EAASC,OAIzC6C,oBAAA,SACEE,EACAhD,EACAC,GAHF,WAKEF,QAAQC,QAAQgD,GACbE,MAAK,SAAChD,GAAc,OAAA+C,EAAKZ,eAAsBnC,MAC/CgD,MAAK,SAACnC,GACLkC,EAAKE,SAAW,EAChBnD,EAAQe,MAETqC,OAAM,SAAC9B,GACN,GAAI2B,EAAKI,aAAa/B,IAAQ2B,EAAKE,SAAWF,EAAKR,WAAnD,CACEQ,EAAKE,UAAY,EACjB,IAAMG,EAAOrF,EAAM+E,EAAS1B,EAAI0B,SAAW,IAC3CC,EAAK/D,QAAQoE,EAAMtD,EAASC,QAG1BgD,EAAKM,qBAAqBjC,IAAQ2B,EAAKE,SAAWF,EAAKR,WACzDe,YAAW,WACTP,EAAKE,UAAY,EACjBF,EAAK/D,QAAQ8D,EAAShD,EAASC,KAC9BgD,EAAKP,UAGVzC,EAAOgD,EAAKI,aAAa/B,GAAOA,EAAImC,YAAcnC,OAIxDwB,yBAAA,SAAaxB,GACX,QAAKA,GAGkB,gBAAhBA,EAAIoC,SAGbZ,iCAAA,SAAqBxB,GACnB,QAAKA,IAGiB,kBAAfA,EAAIL,QAA6C,YAAfK,EAAIL,2BA2B/C,WAAY9B,EAAwBwE,ODjG9BrB,ECkGJE,KAAKoB,QAAU,GACfpB,KAAKqB,KAAOlG,OAAOU,OAAO,MAC1BmE,KAAKsB,OAAS3E,EAAO2E,OACrBtB,KAAKuB,QAAU5E,EAAO4E,QACtBvB,KAAKG,QAAUxD,EAAOwD,QACtBH,KAAKH,eAAiBA,UAAehE,OAAOsF,KDvGxCrB,EAAW0B,iBACRrD,QAAU4B,EAEZD,ICqGLE,KAAKyB,cAAc9E,EAAOyE,SA+E9B,OA5EEM,0BAAA,SAAcN,GACZ,GFtHoBvE,EEsHRuE,EFrHPnF,MAAMC,QAAQW,GEqHG,CACpB,IAAM8E,EAA0CxG,OAAOU,OAAO,MAC7DuF,EAAuBjF,SAAQ,SAACI,GAC3BA,EAAK6D,SACPuB,EAAWpF,EAAK6D,QAAU7D,MAG9B,IAAMqF,EAAWR,EAAuBS,KAAI,SAACtF,GAAS,OAAAA,EAAK6D,UAI3D,OAFAJ,KAAKoB,QAAUO,OACf3B,KAAK8B,cAAcF,OFhID/E,EEoIpB,GAAI5B,EAAc+E,KAAKoB,SAAU,CACzBQ,EAAUzG,OAAOsB,KAAKuD,KAAKoB,SAEjCpB,KAAK8B,cAAcF,KAIvBF,0BAAA,SAAcE,GAAd,WACEA,EAAQzF,SAAQ,SAACiE,GACf,IAAM2B,EAAYtB,EAAKW,QAAQhB,GACzB4B,EAAU,IAAI1B,EAClB,CACEH,QAASM,EAAKN,QACdC,SACAzC,IAAKoE,EAAUE,OACf/B,SAAU6B,EAAU7B,SACpBD,WAAY8B,EAAU9B,YAExBQ,EAAKZ,gBAEPY,EAAKY,KAAKjB,GAAU4B,EAAQE,KAAKC,KAAKH,GACtCvB,EAAKY,KAAKjB,YF7IagC,EAAOC,GAClC,GAYsB,iBAZTA,EACX,OAAOD,EAGT,IAAK,IAAMpG,KAAOqG,EACfD,EAAapG,GAAOqG,EAAKrG,GAG5B,OAAOoG,EEoIiBE,CAAO7B,EAAKY,KAAKjB,GAAS4B,OAIlDN,6BAAA,SACET,EACAT,GAMA,MAAO,CACLU,QAAS,cACTD,cACAT,YAIJkB,kCAAA,SACEa,EACAC,GAEAxC,KAAKH,eAAe4C,aAAa/F,QAAQgG,IAAIH,EAAWC,IAG1Dd,mCAAA,SACEa,EACAC,GAEAxC,KAAKH,eAAe4C,aAAa/D,SAASgE,IAAIH,EAAWC,IAG3Dd,8BAAA,WACE,OAAO,IAAI1B,KAAKH,eAAe8C,aAGjCjB,4BAAA,SAAgBkB,GACd5C,KAAKH,eAAeC,SAAS+C,gBAAkBD"}