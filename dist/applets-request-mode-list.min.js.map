{"version":3,"file":"applets-request-mode-list.min.js","sources":["../src/helpers/utils.ts","../src/ApiHttp.ts"],"sourcesContent":["/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\nfunction getDataType(val: any): string {\n  return Object.prototype.toString.call(val);\n}\n\nexport function isArray(data: any): boolean {\n  return Array.isArray(data);\n}\n\nexport function isPlainObject(val: any): val is Record<string, any> {\n  if (val === null || getDataType(val) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\nexport function assign<T, U>(to: T, from: U): T & U {\n  if (isString(from)) {\n    return to as T & U;\n  }\n\n  for (const key in from) {\n    (to as T & U)[key] = from[key] as any;\n  }\n\n  return to as T & U;\n}\n\nexport function isString(val: any): boolean {\n  return typeof val === \"string\";\n}\n\n/**\n * 遍历\n * @param {Object|Array} obj\n * @param fn\n */\nexport function forEach(obj: any, fn: IAppletsRequest.IEmptyFN): void {\n  if (typeof obj === \"undefined\" || obj === null) {\n    return;\n  }\n\n  let arr = obj;\n\n  // 如果obj是非object类型，例如：number，string等\n  if (typeof obj !== \"object\") {\n    arr = [obj];\n  }\n\n  if (Array.isArray(arr)) {\n    arr.forEach((item, i) => {\n      fn.call(null, item, i, obj);\n    });\n    return;\n  }\n  Object.keys(arr).forEach((key) => {\n    fn.call(null, arr[key], key, arr);\n  });\n}\n\nexport function merge(\n  ...objs: Record<string, any>[]\n): any[] | Record<string, any> {\n  if (objs.length === 0) {\n    return Object.create(null);\n  }\n\n  let result: any = Object.create(null);\n  function assignValue(val: any, key: string | number): void {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (Array.isArray(val)) {\n      result[key] = merge(val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  if (Array.isArray(objs[0])) {\n    result = [];\n  } else {\n    result = Object.create(null);\n  }\n\n  objs.forEach((obj) => {\n    forEach(obj, assignValue);\n  });\n\n  return result;\n}\n","import appletsRequest, { getDefaults } from \"applets-request-weapp\";\nimport { assign, isArray, isPlainObject, merge } from \"./helpers/utils\";\n\ninterface IApiItemConfig {\n  baseURL: string;\n  url: string;\n  fnName: string;\n  method?: IAppletsRequestConfig[\"method\"];\n  retryTimes?: number;\n  interval?: number;\n}\n\nclass ApiItem<IData = any> {\n  private hadRetry = 0;\n\n  retryTimes = 2;\n\n  interval = 2000;\n\n  baseURL = \"\";\n\n  url = \"\";\n\n  fnName = \"\";\n\n  method: IAppletsRequestConfig[\"method\"] = \"GET\";\n\n  appletsRequest: AppletsRequestInstance;\n\n  constructor(config: IApiItemConfig, request: AppletsRequestInstance) {\n    const { retryTimes, interval } = config;\n    this.baseURL = config.baseURL;\n    this.url = config.url;\n    this.fnName = config.fnName;\n    this.method = config.method || this.method;\n    this.retryTimes = this.getValidNumber(this.retryTimes, retryTimes);\n    this.interval = this.getValidNumber(this.interval, interval);\n    this.appletsRequest = request;\n  }\n\n  getValidNumber(originalVal: number, val: number | undefined): number {\n    return !val && val !== 0 ? originalVal : val;\n  }\n\n  http(options?: IAppletsRequestConfig): IAppletsRequestPromise<IData> {\n    return new Promise((resolve, reject) => {\n      this.request(\n        { ...(options || {}), url: this.url, method: this.method },\n        resolve,\n        reject\n      );\n    });\n  }\n\n  request(\n    options: IAppletsRequestConfig,\n    resolve: any,\n    reject: IAppletsRequest.IRejected\n  ): void {\n    Promise.resolve(options)\n      .then((reqConfig) => this.appletsRequest<IData>(reqConfig))\n      .then((res) => {\n        this.hadRetry = 0;\n        resolve(res);\n      })\n      .catch((err) => {\n        if (this.isRetryError(err) && this.hadRetry < this.retryTimes) {\n          this.hadRetry += 1;\n          const opts = merge(options, err.options || {});\n          this.request(opts, resolve, reject);\n          return;\n        }\n        if (this.isIntervalRetryError(err) && this.hadRetry < this.retryTimes) {\n          setTimeout(() => {\n            this.hadRetry += 1;\n            this.request(options, resolve, reject);\n          }, this.interval);\n          return;\n        }\n        reject(this.isRetryError(err) ? err.originalErr : err);\n      });\n  }\n\n  isRetryError(err: any): boolean {\n    if (!err) {\n      return false;\n    }\n    return err.errCode === \"RETRY_ERROR\";\n  }\n\n  isIntervalRetryError(err: any): boolean {\n    if (!err) {\n      return false;\n    }\n    return err.status === \"NETWORK_ERROR\" || err.status === \"TIMEOUT\";\n  }\n}\n\nexport default class ApiHttp {\n  baseURL: string;\n\n  apiList: { [key: string]: IAppletsApi.IApiItem };\n\n  apis: any;\n\n  appletsRequest: AppletsRequestInstance;\n\n  constructor(\n    config: IAppletsApi.IApiHttpConfig,\n    requestConfig?: IAppletsRequestConfig\n  ) {\n    this.apiList = {};\n    this.apis = Object.create(null);\n    this.baseURL = config.baseURL;\n    this.appletsRequest = appletsRequest.create({\n      ...merge(getDefaults(), requestConfig || {}),\n      baseURL: this.baseURL,\n    });\n    this.createApiItem(config.apiList);\n  }\n\n  createApiItem(apiList: IAppletsApi.IApiItems): void {\n    if (isArray(apiList)) {\n      const tmpApiList: { [key: string]: IAppletsApi.IApiItem } = Object.create(\n        null\n      );\n      (apiList as IAppletsApi.IApiItem[]).forEach((item) => {\n        if (item.fnName) {\n          tmpApiList[item.fnName] = item;\n        }\n      });\n      const fnNames = (apiList as IAppletsApi.IApiItem[]).map(\n        (item) => item.fnName\n      );\n\n      this.apiList = tmpApiList;\n      this.generateApiFn(fnNames as string[]);\n      return;\n    }\n\n    if (isPlainObject(apiList)) {\n      this.apiList = apiList as { [key: string]: IAppletsApi.IApiItem };\n\n      const fnNames = Object.keys(apiList);\n\n      this.generateApiFn(fnNames);\n    }\n  }\n\n  generateApiFn(fnNames: string[]): void {\n    fnNames.forEach((fnName) => {\n      const apiConfig = this.apiList[fnName] as IAppletsApi.IApiItem;\n      const apiInfo = {\n        baseURL: this.baseURL,\n        fnName,\n        method: apiConfig.method,\n        url: apiConfig.apiUrl,\n        interval: apiConfig.interval,\n        retryTimes: apiConfig.retryTimes,\n      };\n      if (typeof this.apis[fnName] === \"function\") {\n        throw new Error(`${fnName} already exists in apiList`);\n      }\n      this.apis[fnName] = (options?: IAppletsRequestConfig) => {\n        const apiItem = new ApiItem(apiInfo, this.appletsRequest);\n        const opts = {\n          ...(options || {}),\n          apiConfig,\n        };\n        return apiItem.http(opts);\n      };\n      this.apis[fnName] = assign(this.apis[fnName], apiInfo);\n    });\n  }\n\n  addApiList(apiList: IAppletsApi.IApiItems): void {\n    this.createApiItem(apiList);\n  }\n\n  createRetryError(\n    originalErr: any,\n    options?: IAppletsRequestConfig\n  ): {\n    errCode: string;\n    originalErr: any;\n    options: IAppletsRequestConfig | undefined;\n  } {\n    return {\n      errCode: \"RETRY_ERROR\",\n      originalErr,\n      options,\n    };\n  }\n\n  addRequestInterceptor(\n    fulfilled: IAppletsRequest.IResolved<IAppletsRequestConfig>,\n    rejected?: IAppletsRequest.IRejected\n  ): void {\n    this.appletsRequest.interceptors.request.use(fulfilled, rejected);\n  }\n\n  addResponseInterceptor<T>(\n    fulfilled: IAppletsRequest.IResolved<IAppletsRequestResponse<T>>,\n    rejected?: IAppletsRequest.IRejected\n  ): void {\n    this.appletsRequest.interceptors.response.use(fulfilled, rejected);\n  }\n\n  createCancelToken(): IAppletsRequest.ICancelTokenInstance {\n    return new this.appletsRequest.CancelToken();\n  }\n\n  transformConfig(executor: IAppletsRequest.IConfigTransformer): void {\n    this.appletsRequest.defaults.transformConfig = executor;\n  }\n}\n"],"names":["isPlainObject","val","Object","prototype","toString","call","getDataType","getPrototypeOf","forEach","obj","fn","arr","Array","isArray","item","i","keys","key","merge","_i","objs","length","create","result","assignValue","config","request","this","retryTimes","interval","baseURL","url","fnName","method","getValidNumber","appletsRequest","ApiItem","originalVal","options","Promise","resolve","reject","_this","then","reqConfig","res","hadRetry","catch","err","isRetryError","opts","isIntervalRetryError","setTimeout","originalErr","errCode","status","requestConfig","apiList","apis","getDefaults","createApiItem","ApiHttp","data","tmpApiList_1","fnNames","map","generateApiFn","apiConfig","apiInfo","apiUrl","Error","apiItem","http","to","from","assign","fulfilled","rejected","interceptors","use","response","CancelToken","executor","defaults","transformConfig"],"mappings":"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"}